{"/home/travis/build/npmtest/node-npmtest-forms/test.js":"/* istanbul instrument in package npmtest_forms */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireExampleJsFromReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-forms/lib.npmtest_forms.js":"/* istanbul instrument in package npmtest_forms */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_forms = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_forms = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-forms/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-forms && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_forms */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_forms\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_forms.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        local.assetsDict['/assets.npmtest_forms.rollup.js'] =\n            local.assetsDict['/assets.npmtest_forms.rollup.js'] ||\n            local.fs.readFileSync(\n                // buildCustomOrg-hack\n                local.npmtest_forms.__dirname +\n                    '/lib.npmtest_forms.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-forms/node_modules/forms/index.js":"// This file is just added for convenience so this repository can be\n// directly checked out into a project's deps folder\nmodule.exports = require('./lib/forms');\n\n","/home/travis/build/npmtest/node-npmtest-forms/node_modules/forms/lib/forms.js":"'use strict';\n\nvar async = require('async');\nvar is = require('is');\nvar http = require('http');\nvar querystring = require('qs');\nvar parse = require('url').parse;\nvar formidable = require('formidable');\nvar assign = require('object.assign');\nvar keys = require('object-keys');\n\nexports.widgets = require('./widgets');\nexports.fields = require('./fields');\nexports.render = require('./render');\nexports.validators = require('./validators');\n\nexports.create = function (fields, options) {\n    var opts = assign({}, options);\n\n    var validatePastFirstError = !!opts.validatePastFirstError;\n\n    keys(fields).forEach(function (k) {\n        // if it's not a field object, create an object field.\n        if (!is.fn(fields[k].toHTML) && is.object(fields[k])) {\n            fields[k] = exports.fields.object(fields[k], opts);\n        }\n        fields[k].name = k;\n    });\n    var f = {\n        fields: fields,\n        bind: function (data) {\n            var b = {\n                toHTML: f.toHTML,\n                fields: {}\n            };\n            keys(f.fields).forEach(function (k) {\n                if (data != null || f.fields[k].required) {\n                    b.fields[k] = f.fields[k].bind((data || {})[k]);\n                }\n            });\n            b.data = keys(b.fields).reduce(function (a, k) {\n                a[k] = b.fields[k].data;\n                return a;\n            }, {});\n            b.validate = function () {\n                var callback = arguments.length > 1 ? arguments[1] : arguments[0];\n\n                async.forEach(keys(b.fields), function (k, asyncCallback) {\n                    b.fields[k].validate(b, function (err, bound_field) {\n                        b.fields[k] = bound_field;\n                        asyncCallback(validatePastFirstError ? null : err);\n                    });\n                }, function (err) {\n                    callback(err, b);\n                });\n            };\n            b.isValid = function () {\n                var form = this;\n                return keys(form.fields).every(function (k) {\n                    var field = form.fields[k];\n                    if (is.fn(field.isValid)) { return field.isValid(); }\n                    return field.error === null || typeof field.error === 'undefined';\n                });\n            };\n            return b;\n        },\n        handle: function (obj, callbacks) {\n            if (typeof obj === 'undefined' || obj === null || (is.object(obj) && is.empty(obj))) {\n                (callbacks.empty || callbacks.other)(f, callbacks);\n            } else if (obj instanceof http.IncomingMessage) {\n                if (obj.method === 'GET') {\n                    var qs = parse(obj.url, { parseArrays: false }).query;\n                    f.handle(querystring.parse(qs), callbacks);\n                } else if (obj.method === 'POST' || obj.method === 'PUT') {\n                    // If the app is using bodyDecoder for connect or express,\n                    // it has already put all the POST data into request.body.\n                    if (obj.body) {\n                        f.handle(obj.body, callbacks);\n                    } else {\n                        var form = new formidable.IncomingForm();\n                        form.parse(obj, function (err, originalFields/* , files*/) {\n                            if (err) { throw err; }\n                            var parsedFields = querystring.parse(querystring.stringify(originalFields));\n                            f.handle(parsedFields, callbacks);\n                        });\n                    }\n                } else {\n                    throw new Error('Cannot handle request method: ' + obj.method);\n                }\n            } else if (is.object(obj)) {\n                f.bind(obj).validate(function (err, field) {\n                    if (field.isValid()) {\n                        (callbacks.success || callbacks.other)(field, callbacks);\n                    } else {\n                        (callbacks.error || callbacks.other)(field, callbacks);\n                    }\n                });\n            } else {\n                throw new Error('Cannot handle type: ' + typeof obj);\n            }\n        },\n        toHTML: function () {\n            var form = this;\n\n            var iterator = arguments.length > 1 ? arguments[1] : arguments[0];\n            var name = arguments.length > 1 ? arguments[0] : void 0;\n\n            return keys(form.fields).reduce(function (html, k) {\n                var kname = is.string(name) ? name + '[' + k + ']' : k;\n                return html + form.fields[k].toHTML(kname, iterator);\n            }, '');\n        }\n    };\n    return f;\n};\n","/home/travis/build/npmtest/node-npmtest-forms/node_modules/forms/lib/widgets.js":"'use strict';\n\nvar is = require('is');\nvar keys = require('object-keys');\nvar tag = require('./tag');\n\nvar dataRegExp = /^data-[a-z]+([-][a-z]+)*$/;\nvar ariaRegExp = /^aria-[a-z]+$/;\nvar legalAttrs = ['autocomplete', 'autocorrect', 'autofocus', 'autosuggest', 'checked', 'dirname', 'disabled', 'tabindex', 'list', 'max', 'maxlength', 'min', 'novalidate', 'pattern', 'placeholder', 'readonly', 'required', 'size', 'step'];\nvar ignoreAttrs = ['id', 'name', 'class', 'classes', 'type', 'value', 'multiple'];\nvar getUserAttrs = function (opt) {\n    return keys(opt).reduce(function (attrs, k) {\n        if ((ignoreAttrs.indexOf(k) === -1 && legalAttrs.indexOf(k) > -1) || dataRegExp.test(k) || ariaRegExp.test(k)) {\n            attrs[k] = opt[k];\n        }\n        return attrs;\n    }, {});\n};\n\n// used to generate different input elements varying only by type attribute\nvar input = function (type) {\n    return function (opts) {\n        var opt = opts || {};\n        var userAttrs = getUserAttrs(opt);\n        var w = {\n            classes: opt.classes,\n            type: type,\n            formatValue: function (value) {\n                return (value || value === 0) ? value : null;\n            }\n        };\n        w.toHTML = function (name, field) {\n            var f = field || {};\n            var attrs = {\n                type: type,\n                name: name,\n                id: f.id === false ? false : (f.id || true),\n                classes: w.classes,\n                value: w.formatValue(f.value)\n            };\n            return tag('input', [attrs, userAttrs, w.attrs || {}]);\n        };\n        return w;\n    };\n};\n\nvar choiceValueEquals = function (value1, value2) {\n    return !is.array(value1) && !is.array(value2) && String(value1) === String(value2);\n};\n\nvar isSelected = function (value, choice) {\n    return value && (is.array(value) ? value.some(choiceValueEquals.bind(null, choice)) : choiceValueEquals(value, choice));\n};\n\nvar renderChoices = function (choices, renderer) {\n    return choices.reduce(function (partialRendered, choice) {\n        var isNested = is.array(choice[1]);\n        var renderData = isNested ?\n            { isNested: true, label: choice[0], choices: choice[1] } :\n            { isNested: false, value: choice[0], label: choice[1] };\n        return partialRendered + renderer(renderData);\n    }, '');\n};\n\nvar isScalar = function (value) {\n    return !value || is.string(value) || is.number(value) || is.bool(value);\n};\n\nvar unifyChoices = function (choices, nestingLevel) {\n    if (nestingLevel < 0) {\n        throw new RangeError('choices nested too deep');\n    }\n\n    var unifyChoiceArray = function (arrayChoices, currentLevel) {\n        return arrayChoices.reduce(function (result, choice) {\n            if (!is.array(choice) || choice.length !== 2) {\n                throw new TypeError('choice must be array with two elements');\n            }\n            if (isScalar(choice[0]) && isScalar(choice[1])) {\n                result.push(choice);\n            } else if (isScalar(choice[0]) && (is.array(choice[1]) || is.object(choice[1]))) {\n                result.push([choice[0], unifyChoices(choice[1], currentLevel - 1)]);\n            } else {\n                throw new TypeError('expected primitive value as first and primitive value, object, or array as second element');\n            }\n            return result;\n        }, []);\n    };\n\n    var unifyChoiceObject = function (objectChoices, currentLevel) {\n        return keys(objectChoices).reduce(function (result, key) {\n            var label = objectChoices[key];\n            if (isScalar(label)) {\n                result.push([key, label]);\n            } else if (is.array(label) || is.object(label)) {\n                result.push([key, unifyChoices(label, currentLevel - 1)]);\n            } else {\n                throw new TypeError('expected primitive value, object, or array as object value');\n            }\n            return result;\n        }, []);\n    };\n\n    return is.array(choices) ? unifyChoiceArray(choices, nestingLevel) : unifyChoiceObject(choices, nestingLevel);\n};\n\nvar select = function (isMultiple) {\n    return function (options) {\n        var opt = options || {};\n        var w = {\n            classes: opt.classes,\n            type: isMultiple ? 'multipleSelect' : 'select'\n        };\n        var userAttrs = getUserAttrs(opt);\n        w.toHTML = function (name, field) {\n            var f = field || {};\n            var choices = unifyChoices(f.choices, 1);\n            var optionsHTML = renderChoices(choices, function render(choice) {\n                if (choice.isNested) {\n                    return tag('optgroup', { label: choice.label }, renderChoices(choice.choices, render), true);\n                } else {\n                    return tag('option', { value: choice.value, selected: !!isSelected(f.value, choice.value) }, choice.label);\n                }\n            });\n            var attrs = {\n                name: name,\n                id: f.id === false ? false : (f.id || true),\n                classes: w.classes\n            };\n            if (isMultiple) {\n                attrs.multiple = true;\n            }\n            return tag('select', [attrs, userAttrs, w.attrs || {}], optionsHTML, true);\n        };\n        return w;\n    };\n};\n\nexports.text = input('text');\nexports.email = input('email');\nexports.number = input('number');\nexports.hidden = input('hidden');\nexports.color = input('color');\nexports.tel = input('tel');\n\nvar passwordWidget = input('password');\nvar passwordFormatValue = function () { return null; };\nexports.password = function (opt) {\n    var w = passwordWidget(opt);\n    w.formatValue = passwordFormatValue;\n    return w;\n};\n\nvar dateWidget = input('date');\nexports.date = function (opt) {\n    var w = dateWidget(opt);\n    w.formatValue = function (value) {\n        if (!value) {\n            return null;\n        }\n\n        var date = is.date(value) ? value : new Date(value);\n\n        if (isNaN(date.getTime())) {\n            return null;\n        }\n\n        return date.toISOString().slice(0, 10);\n    };\n    return w;\n};\n\nexports.select = select(false);\nexports.multipleSelect = select(true);\n\nexports.checkbox = function (options) {\n    var opt = options || {};\n    var w = {\n        classes: opt.classes,\n        type: 'checkbox'\n    };\n    var userAttrs = getUserAttrs(opt);\n    w.toHTML = function (name, field) {\n        var f = field || {};\n        var attrs = {\n            type: 'checkbox',\n            name: name,\n            id: f.id === false ? false : (f.id || true),\n            classes: w.classes,\n            checked: !!f.value,\n            value: 'on'\n        };\n        return tag('input', [attrs, userAttrs, w.attrs || {}]);\n    };\n    return w;\n};\n\nexports.textarea = function (options) {\n    var opt = options || {};\n    var w = {\n        classes: opt.classes,\n        type: 'textarea'\n    };\n    var userAttrs = getUserAttrs(opt);\n    w.toHTML = function (name, field) {\n        var f = field || {};\n        var attrs = {\n            name: name,\n            id: f.id === false ? false : (f.id || true),\n            classes: w.classes,\n            rows: opt.rows || null,\n            cols: opt.cols || null\n        };\n        return tag('textarea', [attrs, userAttrs, w.attrs || {}], f.value || '');\n    };\n    return w;\n};\n\nexports.multipleCheckbox = function (options) {\n    var opt = options || {};\n    var w = {\n        classes: opt.classes,\n        labelClasses: opt.labelClasses,\n        type: 'multipleCheckbox'\n    };\n    var userAttrs = getUserAttrs(opt);\n    w.toHTML = function (name, field) {\n        var f = field || {};\n        var choices = unifyChoices(f.choices, 0);\n        return renderChoices(choices, function (choice) {\n            // input element\n            var id = f.id === false ? false : (f.id ? f.id + '_' + choice.value : 'id_' + name + '_' + choice.value);\n            var checked = isSelected(f.value, choice.value);\n\n            var attrs = {\n                type: 'checkbox',\n                name: name,\n                id: id,\n                classes: w.classes,\n                value: choice.value,\n                checked: !!checked\n            };\n            var inputHTML = tag('input', [attrs, userAttrs, w.attrs || {}]);\n\n            // label element\n            var labelHTML = tag('label', { 'for': id, classes: w.labelClasses }, choice.label);\n\n            return inputHTML + labelHTML;\n        });\n    };\n    return w;\n};\n\nexports.label = function (options) {\n    var opt = options || {};\n    var w = { classes: opt.classes || [] };\n    var userAttrs = getUserAttrs(opt);\n    w.toHTML = function (forID) {\n        var attrs = {\n            'for': forID,\n            classes: w.classes\n        };\n        return tag('label', [attrs, userAttrs, w.attrs || {}], opt.content);\n    };\n    return w;\n};\n\nexports.multipleRadio = function (options) {\n    var opt = options || {};\n    var w = {\n        classes: opt.classes,\n        labelClasses: opt.labelClasses,\n        type: 'multipleRadio'\n    };\n    var userAttrs = getUserAttrs(opt);\n    w.toHTML = function (name, field) {\n        var f = field || {};\n        var choices = unifyChoices(f.choices, 0);\n        return renderChoices(choices, function (choice) {\n            // input element\n            var id = f.id === false ? false : (f.id ? f.id + '_' + choice.value : 'id_' + name + '_' + choice.value);\n            var checked = isSelected(f.value, choice.value);\n            var attrs = {\n                type: 'radio',\n                name: name,\n                id: id,\n                classes: w.classes,\n                value: choice.value,\n                checked: !!checked\n            };\n            var inputHTML = tag('input', [attrs, userAttrs, w.attrs || {}]);\n            // label element\n            var labelHTML = tag('label', { 'for': id, classes: w.labelClasses }, choice.label);\n\n            return inputHTML + labelHTML;\n        });\n    };\n    return w;\n};\n","/home/travis/build/npmtest/node-npmtest-forms/node_modules/forms/lib/tag.js":"'use strict';\n\nvar htmlEscape = require('./htmlEscape');\nvar is = require('is');\nvar keys = require('object-keys');\n\n// generates a string for common HTML tag attributes\nvar attrs = function attrs(a) {\n    if (typeof a.id === 'boolean') {\n        a.id = a.id ? 'id_' + a.name : null;\n    }\n    if (is.array(a.classes) && a.classes.length > 0) {\n        a['class'] = htmlEscape(a.classes.join(' '));\n    }\n    a.classes = null;\n    var pairs = [];\n    keys(a).forEach(function (field) {\n        var value = a[field];\n        if (typeof value === 'boolean') {\n            value = value ? field : null;\n        } else if (typeof value === 'number' && isNaN(value)) {\n            value = null;\n        }\n        if (typeof value !== 'undefined' && value !== null) {\n            pairs.push(htmlEscape(field) + '=\"' + htmlEscape(value) + '\"');\n        }\n    });\n    return pairs.length > 0 ? ' ' + pairs.join(' ') : '';\n};\n\nvar selfClosingTags = {\n    area: true,\n    base: true,\n    br: true,\n    col: true,\n    command: true,\n    embed: true,\n    hr: true,\n    img: true,\n    input: true,\n    keygen: true,\n    link: true,\n    meta: true,\n    param: true,\n    source: true,\n    track: true,\n    wbr: true\n};\nvar isSelfClosing = function (tagName) {\n    return Object.prototype.hasOwnProperty.call(selfClosingTags, tagName);\n};\n\nvar tag = function tag(tagName, attrsMap, content, contentIsEscaped) {\n    var safeTagName = htmlEscape(tagName);\n    var attrsHTML = !is.array(attrsMap) ? attrs(attrsMap) : attrsMap.reduce(function (html, map) {\n        return html + attrs(map);\n    }, '');\n    var safeContent = contentIsEscaped ? content : htmlEscape(content);\n    return '<' + safeTagName + attrsHTML + (isSelfClosing(safeTagName) ? ' />' : '>' + safeContent + '</' + safeTagName + '>');\n};\n\ntag.attrs = attrs;\n\nmodule.exports = tag;\n","/home/travis/build/npmtest/node-npmtest-forms/node_modules/forms/lib/htmlEscape.js":"'use strict';\n\n/*\nfrom hogan https://github.com/twitter/hogan.js/blob/master/lib/template.js#L317-L327\n*/\nmodule.exports = (function () {\n    var rAmp = /&/g;\n    var rLt = /</g;\n    var rGt = />/g;\n    var rApos = /'/g;\n    var rQuot = /\"/g;\n    var hChars = /[&<>\"']/;\n\n    var coerceToString = function (value) {\n        return typeof value === 'undefined' || value === null ? '' : String(value);\n    };\n\n    var htmlEscape = function (value) {\n        var str = coerceToString(value);\n        return hChars.test(str) ?\n            str.replace(rAmp, '&amp;')\n                .replace(rLt, '&lt;')\n                .replace(rGt, '&gt;')\n                .replace(rApos, '&#39;')\n                .replace(rQuot, '&quot;') :\n            str;\n    };\n\n    return htmlEscape;\n}());\n","/home/travis/build/npmtest/node-npmtest-forms/node_modules/forms/lib/fields.js":"'use strict';\n\nvar forms = require('./forms');\nvar tag = require('./tag');\nvar is = require('is');\nvar async = require('async');\nvar validators = require('./validators');\nvar coerceArray = function (arr) {\n    return is.array(arr) && arr.length > 0 ? arr : [];\n};\nvar assign = require('object.assign');\nvar nameSeparatorRegExp = /[_-]/g;\n\nexports.string = function (options) {\n    var opt = options || {};\n\n    var f = assign({}, opt);\n    f.widget = f.widget || forms.widgets.text(opt.attrs || {});\n\n    f.parse = function (raw_data) {\n        if (typeof raw_data !== 'undefined' && raw_data !== null) {\n            return String(raw_data);\n        }\n        return '';\n    };\n    f.bind = function (raw_data) {\n        var b = assign({}, f); // clone field object:\n        b.value = raw_data;\n        b.data = b.parse(raw_data);\n        b.validate = function (form, callback) {\n            var forceValidation = (b.validators || []).some(function (validator) {\n                return validator.forceValidation;\n            });\n            if (!forceValidation && (raw_data === '' || raw_data === null || typeof raw_data === 'undefined')) {\n                // don't validate empty fields, but check if required\n                if (b.required) {\n                    var validator = is.fn(b.required) ? b.required : validators.required();\n                    validator(form, b, function (v_err) {\n                        b.error = v_err ? String(v_err) : null;\n                        callback(v_err, b);\n                    });\n                } else {\n                    process.nextTick(function () { callback(null, b); });\n                }\n            } else {\n                async.forEachSeries(b.validators || [], function (v, asyncCallback) {\n                    if (!b.error) {\n                        v(form, b, function (v_err) {\n                            b.error = v_err ? String(v_err) : null;\n                            asyncCallback(null);\n                        });\n                    } else {\n                        asyncCallback(null);\n                    }\n                }, function (err) {\n                    callback(err, b);\n                });\n            }\n        };\n        return b;\n    };\n    f.errorHTML = function () {\n        var classes = typeof this.cssClasses !== 'undefined' ? coerceArray(this.cssClasses.error) : [];\n        return this.error ? tag('p', { classes: ['error_msg'].concat(classes) }, this.error) : '';\n    };\n    f.labelText = function (name) {\n        var text = this.label;\n        if (!text && name) {\n            text = name.charAt(0).toUpperCase() + name.slice(1).replace(nameSeparatorRegExp, ' ').replace(/([a-z])([A-Z])/g, function (match, firstLetter, secondLetter) {\n                return firstLetter + ' ' + secondLetter.toLowerCase();\n            });\n        }\n        return text || '';\n    };\n    f.labelHTML = function (name, id) {\n        if (this.widget.type === 'hidden') { return ''; }\n        var forID = id === false ? false : (id || 'id_' + name);\n        return forms.widgets.label({\n            classes: typeof this.cssClasses !== 'undefined' ? coerceArray(this.cssClasses.label) : [],\n            content: this.labelText(name, id)\n        }).toHTML(forID, f);\n    };\n    f.classes = function () {\n        var r = ['field'];\n        if (this.error) { r.push('error'); }\n        if (this.required) { r.push('required'); }\n        if (typeof this.cssClasses !== 'undefined') {\n            r = r.concat(coerceArray(this.cssClasses.field));\n        }\n        return r;\n    };\n    f.toHTML = function (name, iterator) {\n        return (iterator || forms.render.div)(name || this.name, this, opt);\n    };\n\n    return f;\n};\n\nexports.number = function (opt) {\n    var opts = assign({}, opt);\n    var f = exports.string(opts);\n\n    f.parse = function (raw_data) {\n        if (raw_data === null || raw_data === '') {\n            return NaN;\n        }\n        return Number(raw_data);\n    };\n    return f;\n};\n\nexports['boolean'] = function (opt) {\n    var opts = assign({}, opt);\n    var f = exports.string(opts);\n\n    f.widget = opts.widget || forms.widgets.checkbox(opts.attrs || {});\n    f.parse = function (raw_data) {\n        return !!raw_data;\n    };\n    return f;\n};\n\nexports.email = function (opt) {\n    var opts = assign({}, opt);\n    if (!opts.widget) { opts.widget = forms.widgets.email(opts.attrs || {}); }\n    var f = exports.string(opts);\n    if (f.validators) {\n        f.validators.unshift(forms.validators.email());\n    } else {\n        f.validators = [forms.validators.email()];\n    }\n    return f;\n};\n\nexports.tel = function (opt) {\n    var opts = assign({}, opt);\n    if (!opts.widget) { opts.widget = forms.widgets.tel(opts.attrs || {}); }\n    return exports.string(opts);\n};\n\nexports.password = function (opt) {\n    var opts = assign({}, opt);\n    var f = exports.string(opts);\n    f.widget = opts.widget || forms.widgets.password(opts.attrs || {});\n    return f;\n};\n\nexports.url = function (opt) {\n    var opts = assign({}, opt);\n    var f = exports.string(opts);\n    if (f.validators) {\n        f.validators.unshift(forms.validators.url());\n    } else {\n        f.validators = [forms.validators.url()];\n    }\n    return f;\n};\n\nexports.array = function (opt) {\n    var opts = assign({}, opt);\n    var f = exports.string(opts);\n    f.parse = function (raw_data) {\n        if (typeof raw_data === 'undefined') { return []; }\n        return is.array(raw_data) ? raw_data : [raw_data];\n    };\n    return f;\n};\n\nexports.date = function (opt) {\n    var opts = assign({}, opt);\n    var f = exports.string(opts);\n    if (f.validators) {\n        f.validators.unshift(forms.validators.date());\n    } else {\n        f.validators = [forms.validators.date()];\n    }\n    return f;\n};\n\nexports.object = function (fields, opts) {\n    return forms.create(fields || {}, opts);\n};\n","/home/travis/build/npmtest/node-npmtest-forms/node_modules/forms/lib/validators.js":"'use strict';\n\nvar util = require('util');\nvar is = require('is');\nvar trim = require('string.prototype.trim');\n\nvar format = function format(message) {\n    if (arguments.length < 2 || message.lastIndexOf('%s') >= 0) {\n        return util.format.apply(null, [message].concat(Array.prototype.slice.call(arguments, 1)));\n    } else {\n        return message;\n    }\n};\n\nvar formatFieldName = function formatFieldName(field) {\n    var defaultFieldName = 'This field';\n\n    // in regular use, labelText is a defined function, but it's not when running tests.\n    if (typeof field.labelText === 'function') {\n        return field.name ? field.labelText(field.name) : defaultFieldName;\n    } else {\n        return field.name || defaultFieldName;\n    }\n};\n\nexports.matchField = function (match_field, message) {\n    var msg = message || 'Does not match %s.';\n    return function (form, field, callback) {\n        if (form.fields[match_field].data !== field.data) {\n            callback(format(msg, match_field));\n        } else {\n            callback();\n        }\n    };\n};\n\nexports.matchValue = function (valueGetter, message) {\n    if (!is.fn(valueGetter)) {\n        throw new TypeError('valueGetter must be a function');\n    }\n    var msg = message || '%s does not match expected value: \"%s\"';\n    return function (form, field, callback) {\n        var expected = valueGetter();\n        if (field.data !== expected) {\n            callback(format(msg, formatFieldName(field), expected));\n        } else {\n            callback();\n        }\n    };\n};\n\nexports.required = function (message) {\n    var msg = message || '%s is required.';\n    return function (form, field, callback) {\n        if (trim(field.data || '').length === 0) {\n            callback(format(msg, formatFieldName(field)));\n        } else {\n            callback();\n        }\n    };\n};\n\nexports.requiresFieldIfEmpty = function (alternate_field, message) {\n    var msg = message || 'One of %s or %s is required.';\n    var validator = function (form, field, callback) {\n        var alternateBlank = trim(form.fields[alternate_field].data || '').length === 0;\n        var fieldBlank = trim(field.data || '').length === 0;\n        if (alternateBlank && fieldBlank) {\n            callback(format(msg, formatFieldName(field), alternate_field));\n        } else {\n            callback();\n        }\n    };\n    validator.forceValidation = true;\n    return validator;\n};\n\nexports.min = function (val, message) {\n    var msg = message || 'Please enter a value greater than or equal to %s.';\n    return function (form, field, callback) {\n        if (field.data >= val) {\n            callback();\n        } else {\n            callback(format(msg, val));\n        }\n    };\n};\n\nexports.max = function (val, message) {\n    var msg = message || 'Please enter a value less than or equal to %s.';\n    return function (form, field, callback) {\n        if (field.data <= val) {\n            callback();\n        } else {\n            callback(format(msg, val));\n        }\n    };\n};\n\nexports.range = function (min, max, message) {\n    var msg = message || 'Please enter a value between %s and %s.';\n    return function (form, field, callback) {\n        if (field.data >= min && field.data <= max) {\n            callback();\n        } else {\n            callback(format(msg, min, max));\n        }\n    };\n};\n\nexports.minlength = function (val, message) {\n    var msg = message || 'Please enter at least %s characters.';\n    return function (form, field, callback) {\n        if (field.data.length >= val) {\n            callback();\n        } else {\n            callback(format(msg, val));\n        }\n    };\n};\n\nexports.maxlength = function (val, message) {\n    var msg = message || 'Please enter no more than %s characters.';\n    return function (form, field, callback) {\n        if (field.data.length <= val) {\n            callback();\n        } else {\n            callback(format(msg, val));\n        }\n    };\n};\n\nexports.rangelength = function (min, max, message) {\n    var msg = message || 'Please enter a value between %s and %s characters long.';\n    return function (form, field, callback) {\n        if (field.data.length >= min && field.data.length <= max) {\n            callback();\n        } else {\n            callback(format(msg, min, max));\n        }\n    };\n};\n\nexports.regexp = function (regex, message) {\n    var msg = message || 'Invalid format.';\n    var re = new RegExp(regex);\n    return function (form, field, callback) {\n        if (re.test(field.data)) {\n            callback();\n        } else {\n            callback(msg);\n        }\n    };\n};\n\nexports.color = function (message) {\n    var msg = message || 'Inputs of type \"color\" require hex notation, e.g. #FFF or #ABC123.';\n    var re = /^#([0-9A-F]{8}|[0-9A-F]{6}|[0-9A-F]{3})$/i;\n    return function (form, field, callback) {\n        if (re.test(field.data)) {\n            callback();\n        } else {\n            callback(msg);\n        }\n    };\n};\n\nexports.email = function (message) {\n    var msg = message || 'Please enter a valid email address.';\n    // regular expression by Scott Gonzalez:\n    // http://projects.scottsplayground.com/email_address_validation/\n    // eslint-disable-next-line no-control-regex, no-useless-escape\n    return exports.regexp(/^((([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?$/i, msg);\n};\n\nexports.url = function (include_localhost, message) {\n    var msg = message || 'Please enter a valid URL.';\n    // regular expression by Scott Gonzalez:\n    // http://projects.scottsplayground.com/iri/\n    // eslint-disable-next-line no-control-regex, no-useless-escape\n    var external_regex = /^(https?|ftp):\\/\\/(((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:)*@)?(((\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5]))|((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?)(:\\d*)?)(\\/((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)+(\\/(([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)*)*)?)?(\\?((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|[\\uE000-\\uF8FF]|\\/|\\?)*)?(#((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|\\/|\\?)*)?$/i;\n    // eslint-disable-next-line no-useless-escape\n    var with_localhost_regex = /^(https?|ftp):\\/\\/(localhost|((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:)*@)?(((\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5]))|((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?)(:\\d*)?)(\\/((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)+(\\/(([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)*)*)?)?(\\?((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|[\\uE000-\\uF8FF]|\\/|\\?)*)?(#((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|\\/|\\?)*)?$/i;\n    return exports.regexp(include_localhost ? with_localhost_regex : external_regex, msg);\n};\n\nexports.date = function (message) {\n    var msg = message || 'Inputs of type \"date\" must be valid dates in the format \"yyyy-mm-dd\"';\n    var numberRegex = /^[0-9]+$/,\n        invalidDate = new Date('z');\n    return function (form, field, callback) {\n        var parts = field.data ? field.data.split('-') : [];\n        var allNumbers = parts.every(function (part) { return numberRegex.test(part); });\n        var date = allNumbers && parts.length === 3 ? new Date(parts[0], parts[1] - 1, parts[2]) : invalidDate;\n        if (!isNaN(date.getTime())) {\n            callback();\n        } else {\n            callback(msg);\n        }\n    };\n};\n\nexports.alphanumeric = function (message) {\n    return exports.regexp(/^[a-zA-Z0-9]*$/, message || 'Letters and numbers only.');\n};\n\nexports.digits = function (message) {\n    return exports.regexp(/^\\d+$/, message || 'Numbers only.');\n};\n\nexports.integer = function (message) {\n    return exports.regexp(/^-?\\d+$/, message || 'Please enter an integer value.');\n};\n","/home/travis/build/npmtest/node-npmtest-forms/node_modules/forms/lib/render.js":"'use strict';\n\nvar tag = require('./tag');\nvar wrapWith = function (tagName) {\n    return function (name, field, options) {\n        var opt = options || {};\n        var wrappedContent = [];\n        var errorHTML = opt.hideError ? '' : field.errorHTML();\n        if (field.widget.type === 'multipleCheckbox' || field.widget.type === 'multipleRadio') {\n            var fieldsetAttrs = { classes: [] };\n            if (opt.fieldsetClasses) {\n                fieldsetAttrs.classes = fieldsetAttrs.classes.concat(opt.fieldsetClasses);\n            }\n            var legendAttrs = { classes: [] };\n            if (opt.legendClasses) {\n                legendAttrs.classes = legendAttrs.classes.concat(opt.legendClasses);\n            }\n\n            var fieldset = tag('fieldset', fieldsetAttrs, [\n                tag('legend', legendAttrs, field.labelText(name)),\n                opt.errorAfterField ? '' : errorHTML,\n                field.widget.toHTML(name, field),\n                opt.errorAfterField ? errorHTML : ''\n            ].join(''), true);\n            wrappedContent.push(fieldset);\n        } else {\n            var fieldHTMLs = [field.labelHTML(name, field.id), field.widget.toHTML(name, field)];\n            if (opt.labelAfterField) {\n                fieldHTMLs.reverse();\n            }\n            if (opt.errorAfterField) {\n                fieldHTMLs.push(errorHTML);\n            } else {\n                fieldHTMLs.unshift(errorHTML);\n            }\n            wrappedContent = wrappedContent.concat(fieldHTMLs);\n        }\n        return tag(tagName, { classes: field.classes() }, wrappedContent.join(''), true);\n    };\n};\nexports.div = wrapWith('div');\nexports.p = wrapWith('p');\nexports.li = wrapWith('li');\n\nexports.table = function (name, field, options) {\n    var opt = options || {};\n\n    var th = tag('th', {}, field.labelHTML(name, field.id), true);\n\n    var tdContent = field.widget.toHTML(name, field);\n\n    if (!opt.hideError) {\n        var errorHTML = field.errorHTML();\n        if (opt.errorAfterField) {\n            tdContent += errorHTML;\n        } else {\n            tdContent = errorHTML + tdContent;\n        }\n    }\n\n    var td = tag('td', {}, tdContent, true);\n\n    return tag('tr', { classes: field.classes() }, th + td, true);\n};\n"}